spring.application.name=patient-service

## FOR IN MEMORY DATABASE

#spring.h2.console.enabled=true
#spring.h2.console.path=/h2-console
#spring.datasource.url=jdbc:h2:mem:testdb
#spring.datasource.driverClassName=org.h2.Driver
#
#spring.datasource.username=user
#spring.datasource.password=123
#
#spring.jpa.hibernate.ddl-auto=update
#spring.sql.init.mode=always

# PostgreSQL Datasource (injected via docker-compose env vars)
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}

spring.datasource.driver-class-name=org.postgresql.Driver

#billing service
billing.service.address=${BILLING_SERVICE_ADDRESS}
billing.service.grpc.port=${BILLING_SERVICE_GRPC_PORT}
# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.sql.init.mode=always
logging.level.com.example.patientservice.grpc=INFO

server.port=4000

spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.ByteArraySerializer
spring.kafka.bootstrap.servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS}
# Logging
logging.level.root=info
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true